{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_excel_input",
						"type": "DatasetReference"
					},
					"name": "excelsource"
				},
				{
					"dataset": {
						"referenceName": "dest_company_table",
						"type": "DatasetReference"
					},
					"name": "companytable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "azureemployeetable",
						"type": "DatasetReference"
					},
					"name": "azureemployeetable"
				}
			],
			"transformations": [
				{
					"name": "mergelogic"
				},
				{
					"name": "joinoncompanycode"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as string,",
				"          CompanyCode as string,",
				"          EmployeeId as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          DOB as string,",
				"          CreateDate as string,",
				"          UpdateDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> excelsource",
				"source(output(",
				"          Id as integer,",
				"          CompanyCode as string,",
				"          CompanyName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> companytable",
				"joinoncompanycode alterRow(upsertIf(true())) ~> mergelogic",
				"excelsource, companytable join(excelsource@CompanyCode == companytable@CompanyCode,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinoncompanycode",
				"mergelogic sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Id as integer,",
				"          CompanyCode as string,",
				"          EmployeeId as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          DOB as timestamp,",
				"          CreateDate as timestamp,",
				"          UpdateDate as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['Id'],",
				"     format: 'table',",
				"     preSQLs:['set identity_insert [EmployeeFromExcel] on;'],",
				"     postSQLs:['set identity_insert [EmployeeFromExcel] off;'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> azureemployeetable"
			]
		}
	}
}